(require 'regtests)

(test-is "nconc 0" (nconc) nil)
(test-is "nconc 1" (nconc '()) nil)
(test-is "nconc 2" (nconc '(a)) '(a))
(test-is "nconc 3" (nconc '(a b)) '(a b))
(test-is "nconc 4" (nconc '() '()) nil)
(test-is "nconc 5" (nconc '() '(a)) '(a))
(test-is "nconc 6" (nconc '(a) '()) '(a))
(test-is "nconc 7" (nconc '(a) '(b)) '(a b))
(test-is "nconc 8" (nconc '() '(a b)) '(a b))
(test-is "nconc 9" (nconc '(a b) '()) '(a b))
(test-is "nconc 10" (nconc '(a b) '(c d)) '(a b c d))
(test-is "nconc 11" (nconc '(a) '(c d)) '(a c d))
(test-is "nconc 12" (nconc '(a b) '(c)) '(a b c))
(test-is "nconc 13" (nconc '() '() '()) nil)
(test-is "nconc 14" (nconc '(a) '() '()) '(a))
(test-is "nconc 15" (nconc '(a b) '() '()) '(a b))
(test-is "nconc 16" (nconc '() '(a) '()) '(a))
(test-is "nconc 17" (nconc '(a) '(b) '()) '(a b))
(test-is "nconc 18" (nconc '(a b) '(c) '()) '(a b c))
(test-is "nconc 19" (nconc '() '(a b) '()) '(a b))
(test-is "nconc 20" (nconc '(a) '(c d) '()) '(a c d))
(test-is "nconc 21" (nconc '(a b) '(c d) '()) '(a b c d))
(test-is "nconc 22" (nconc '() '() '(a)) '(a))
(test-is "nconc 23" (nconc '(a) '() '(b)) '(a b))
(test-is "nconc 24" (nconc '(a b) '() '(c)) '(a b c))
(test-is "nconc 25" (nconc '() '(a) '(b)) '(a b))
(test-is "nconc 26" (nconc '(a) '(b) '(c)) '(a b c))
(test-is "nconc 27" (nconc '(a b) '(c) '(d)) '(a b c d))
(test-is "nconc 28" (nconc '() '(a b) '(c)) '(a b c))
(test-is "nconc 29" (nconc '(a) '(b c) '(d)) '(a b c d))
(test-is "nconc 30" (nconc '(a b) '(c d) '(e)) '(a b c d e))
(test-is "nconc 31" (nconc '() '() '(a b)) '(a b))
(test-is "nconc 32" (nconc '(a) '() '(c d)) '(a c d))
(test-is "nconc 33" (nconc '(a b) '() '(c d)) '(a b c d))
(test-is "nconc 34" (nconc '() '(a) '(b c)) '(a b c))
(test-is "nconc 35" (nconc '(a) '(b) '(c d)) '(a b c d))
(test-is "nconc 36" (nconc '(a b) '(c) '(d e)) '(a b c d e))
(test-is "nconc 37" (nconc '() '(a b) '(c d)) '(a b c d))
(test-is "nconc 38" (nconc '(a) '(b c) '(d e)) '(a b c d e))
(test-is "nconc 39" (nconc '(a b) '(c d) '(e f)) '(a b c d e f))
(test-is "nconc 41" (nconc '() '() '() '()) nil)
(test-is "nconc 42" (nconc '(1 2 3) '() '(4 5 6) '(a) '(fffff))
         '(1 2 3 4 5 6 a fffff))

(defparameter list-a '(2 3 4 5 6))
(defparameter list-b '(c d e f))
(defparameter list-c '(#:() #:() #:()))

(test-is "nconc 43" (nconc list-a list-b list-c)
         '(2 3 4 5 6 c d e f #:() #:() #:()))
(test-is "nconc 43a" list-a '(2 3 4 5 6 c d e f #:() #:() #:()))
(test-is "nconc 43b" list-b '(c d e f #:() #:() #:()))
(test-is "nconc 43c" list-c '(#:() #:() #:()))

(done-testing)
